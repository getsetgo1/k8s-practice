# Pod 정의
apiVersion: apps/v1
kind: Deployment
metadata:
  name: nginx-deployment
  namespace: hohey
spec:
  replicas: 2
  selector:
    matchLabels:
      app: my-nginx
  template:
    metadata:
      labels:
        app: my-nginx
    spec: 
      containers:
        - name: nginx
          image: nginx
          ports: 
          - containerPort: 80
---
apiVersion: v1
kind: Service
metadata:
  name: nginx-service
  namespace: hohey
spec:
# ingress를 적용하기 위해 ClusterIP로 변경한다.
  type: ClusterIP
  ports:
  - name: http
    port: 80
    targetPort: 80
  selector: 
    app: my-nginx

---
# ingress 자원에 대한 정의
# ingress-controller 설치는 별도 필요
# ingress-controller도 nginx 기반으로 구성되어있음.
# ingress-controller를 설치시에 alb 생성되고, Ingress 지원과 함께 서비스 라우팅 수행
# ingress controller 1개에서 여러개의 ingress로 라우팅
# kubectl apply -f https://raw.githubusercontent.com/kubernetes/ingress-nginx/controller-v1.8.1/deploy/static/provider/aws/deploy.yaml

apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: my-nginx-ingress
  namespace: hohey
  annotations: 
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/rewrite-target: /$1 #첫번째 prefix 제거 후, endpoint 전달
# front에서 product-service/product/list 이렇게 쓰면 ingress가 product-service인 거 인지하고 저 부분을 뗀 url을 서버로 요청한다

spec: 
  rules:
  - host: server.woojin.today
    http:
      paths:
      - path: /product-service/(.*)
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port: 
              number: 80
      - path: /order-service/(.*)
        pathType: Prefix
        backend:
          service:
            name: nginx-service
            port: 
              number: 80